plugins {
    id 'cpp'
    id 'java-library'
    id 'google-test'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
    id 'edu.wpi.first.NativeUtils' version '2025.3.0'
    id 'edu.wpi.first.GradleJni' version '1.1.0'
    id "edu.wpi.first.GradleRIO" version "2024.3.2"
    id 'edu.wpi.first.GradleVsCode' version '2.1.0'
    id 'com.diffplug.spotless' version '6.20.0'
}

repositories {
    mavenCentral()
}
if (project.hasProperty('releaseMode')) {
    wpilibRepositories.addAllReleaseRepositories(project)
} else {
    wpilibRepositories.addAllDevelopmentRepositories(project)
}

// Apply C++ configuration
apply from: 'config.gradle'

// Apply Java configuration
dependencies {
    def wpiVersion = "2025.+"
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    implementation "edu.wpi.first.cscore:cscore-java:${wpiVersion}"
    implementation "edu.wpi.first.cameraserver:cameraserver-java:${wpiVersion}"
    implementation "edu.wpi.first.ntcore:ntcore-java:${wpiVersion}"
    implementation "edu.wpi.first.wpilibj:wpilibj-java:${wpiVersion}"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:${wpiVersion}"
    implementation "edu.wpi.first.wpimath:wpimath-java:${wpiVersion}"
    implementation "edu.wpi.first.wpiunits:wpiunits-java:${wpiVersion}"
    implementation "edu.wpi.first.hal:hal-java:${wpiVersion}"

    implementation "org.ejml:ejml-simple:0.43.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"
    implementation 'edu.wpi.first.thirdparty.frc2024.opencv:opencv-java:4.8.0-4'

    implementation 'gov.nist.math:jama:1.0.3'

    testImplementation('org.junit.platform:junit-platform-launcher:1.5.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

apply from: 'publish.gradle'

wrapper {
    gradleVersion '8.10.2'
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        googleJavaFormat()
        removeUnusedImports()
        importOrder()
        formatAnnotations()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'xml', {
        target fileTree('.') {
            include '**/*.xml'
            exclude '**/build/**', '**/build-*/**'
        }
        eclipseWtp('xml')
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
